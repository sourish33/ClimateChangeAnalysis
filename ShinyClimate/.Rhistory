as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
row[1, 7:ncol(co2_df)]
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
print(values)
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
plot_data <- data.frame(years = years, values = values)
plot_data |> ggplot(aes(x=years, y=values))
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
plot_data <- data.frame(years = years, values = values)
plot_data |> ggplot(aes(x=years, y=values)) +   geom_line(color = "blue", size = 1) +
geom_point(color = "blue", size = 3) +
labs(title = paste("GHG (excl LULUCF) from F1970 to F2021 for", country),
x = "Years",
y = "Million tons of CO2 equivalent") +
theme_minimal()
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
plot_data <- data.frame(years = years, values = values)
plot_data |> ggplot(aes(x=years, y=values)) +   geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("GHG (excl LULUCF) from 1970 to 2021 for", country),
x = "Years",
y = "Million tons of CO2 equivalent") +
theme_minimal()
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])
plot_data <- data.frame(years = rep(years, 2), values = c(ghg_values, co2_values), type = rep(c("GHG", "CO2"), each = length(ghg_values)))
plot_data |> ggplot(aes(x=years, y=values)) +   geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Million tons of CO2 equivalent") +
theme_minimal()
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("GHG", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Million tons of CO2 equivalent") +
theme_minimal()
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("GHG", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
View(ghg_data)
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("Total", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
library(tidyverse)
co2_df <- read_csv('../ShinyClimate/r/co2_cleaned.csv')
country = "World"
co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("Total", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
country = "World"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
values <- as.numeric(row[1, 7:ncol(co2_df)])
plot_data <- data.frame(years = years, values = values)
plot_data |> ggplot(aes(x=years, y=values)) +   geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("GHG (excl LULUCF) from 1970 to 2021 for", country),
x = "Years",
y = "Million tons of CO2 equivalent") +
theme_minimal()
country = "United States"
co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
country = "United States"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("Total", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
setwd("~/Desktop/ClimateChangeAnalysis/ShinyClimate")
shiny::runApp()
co2_df <- read_csv('../ShinyClimate/data/co2_cleaned.csv')
co2_df |> head()
co2_df |> filter(ISO2 != ZZ) |> dim()
co2_df |> filter(ISO2 != 'ZZ') |> dim()
runApp()
regions <-co2_df |>
filter(ISO2 == 'ZZ')
View(regions)
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
co2_df <- read_csv('../ShinyClimate/data/co2_cleaned.csv')
country = "United States"
co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
country = "United States"
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("Total", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data %>%
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
View(plot_data)
View(ghg_data)
country = "United States"
y1 = 1990
y2= 2018
years <- as.numeric(substring(names(co2_df)[7:ncol(co2_df)], 2))
row1 <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")
ghg_values <- as.numeric(row1[1, 7:ncol(co2_df)])/1000
row2 <- co2_df |> filter(Country == country & Industry == "Energy" & Gas_Type == "Carbon dioxide")
co2_values <- as.numeric(row2[1, 7:ncol(co2_df)])/1000
# Create data frames for each type
ghg_data <- data.frame(years = years, values = ghg_values, type = rep("Total", length(ghg_values)))
co2_data <- data.frame(years = years, values = co2_values, type = rep("CO2", length(co2_values)))
# Combine data for plotting
plot_data <- rbind(ghg_data, co2_data)
# Plotting
plot_data |>
filter(years >= y1 & years <= y2) |>
ggplot(aes(x = years, y = values, color = type)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Emissions from 1970 to 2021 for", country),
x = "Years",
y = "Giga-tons of CO2 equivalent") +
theme_minimal()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
co2_df <- read_csv('data/data_modern_ppm.csv')
co2_ppm <- read_csv('data/data_modern_ppm.csv')
co2_ppm <- read_csv('data/data_modern_ppm.csv')
co2_ppm |> head()
co2_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line(size = 1) +
geom_point(size = 3) +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line(size = 1) +
geom_point(size = 1) +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point() +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(0.5) +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_modern_ppm <- read_csv('data/data_modern_ppm.csv')
co2_modern_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations from 1958-2023"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
co2_2k_ppm <- read_csv('data/data_2000.csv')
co2_modern_ppm |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations past 2000 years"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
df <- read_csv('data/data_2000.csv')
df |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations past 2000 years"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
df <- read_csv('data/data_800k.csv')
df |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations past 2000 years"),
x = "Years",
y = "CO2 concentration (ppm)") +
theme_minimal()
df <- read_csv('data/data_800k.csv')
df |>
ggplot(aes(x = Numeric_date, y = Value)) +
geom_line() +
geom_point(size = 0.5) +
labs(title = paste("Atmospheric CO2 concentrations past 800K years"),
x = "Thousdand years",
y = "CO2 concentration (ppm)") +
theme_minimal()
runApp()
runApp()
runApp()
View(co2_df)
runApp()
runApp()
shiny::runApp()
runApp()
dashboardHeader(title = "GHG Dashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(co2_df)
runApp()
yr <- "F2020"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
arrange(desc(!!sym(yr))) |>
slice(1:5) |>
ggplot(aes(x = reorder(Country, desc(!!sym(yr))), y = !!sym(yr))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = paste("Top 5 GH Gas Emitters in", yr),  # Corrected title
x = "Country",
y = yr)+
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
yr <- "F2020"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
arrange(desc(!!sym(yr))) |>
slice(1:5) |>
ggplot(aes(x = reorder(Country, desc(!!sym(yr))), y = !!sym(yr))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = paste("Top 5 GH Gas Emitters in", yr),  # Corrected title
x = "Country",
y = yr)+
theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
yr <- "F2020"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(yr))
yr <- "F2020"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
print(sum_emissions)
yr <- "F2020"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F2021"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1975"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1971"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1990"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1980"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1989"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1990"
co2_df |>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1990"
co2_df |>
drop_na()
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1990"
co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1989"
co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F2021"
co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1975"
co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
runApp()
runApp()
runApp()
runApp()
runApp()
yr <- "F1975"
total_emissions <- co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
totem <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")[!!sym(yr)]
yr <- "F1975"
total_emissions <- co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
totem <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas")[!!sym(yr)]
yr <- "F1975"
totem <- co2_df |> filter(Country == country & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |> pull(!!sym(yr))
yr <- "F1975"
totem <- co2_df |> filter(Country == "World" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |> pull(!!sym(yr))
total_emissions <- co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
yr <- "F1975"
totem <- co2_df |> filter(Country == "World" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |> pull(!!sym(yr))
print(totem)
total_emissions <- co2_df |>
drop_na()|>
filter(ISO2 != "ZZ" & CTS_Code == "ECNGDE" & Gas_Type == "Greenhouse gas") |>
summarise(sum_emissions = sum(!!sym(yr)))
print(total_emissions)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(fontawesome)
install.packages("fontawesome")
install.packages("fontawesome")
runApp()
runApp()
runApp()
install.packages("dashboardthemes")
runApp()
runApp()
runApp()
